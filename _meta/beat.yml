################### Op5beat Configuration Example #########################

############################# Op5beat ######################################

op5beat:
  # How often to query livestatus for data. The default is 30s.
  period: 30s

  # When Querying livestatus, how fresh should the last check be? The default is 30

  lastCheck: 30

  # The host and port where livestatus is listening.
  op5Host: "/opt/monitor/var/rw/live"

  # The connection type to use for livestatus (unix or tcp)
  op5Connect: "unix"

  # Which livestatus table to query
  query: "services"

  # The columns of data you want to retrieve. At a minimum, the following fields must be included:
  # ["host_name", "display_name", "state",  "plugin_output", "perf_data"]
  columns: ["acknowledged", "acknowledgement_type", "check_command", "check_freshness", "check_type", "custom_variable_names", "custom_variable_values", "custom_variables", "description", "display_name", "downtimes_with_info", "execution_time", "groups", "host_name", "host_acknowledged", "host_acknowledgement_type", "host_address", "host_alias", "host_check_freshness", "host_check_type", "host_childs", "host_custom_variable_names", "host_custom_variable_values", "host_custom_variables", "host_display_name", "host_downtimes_with_info", "host_groups", "host_hard_state", "host_is_flapping", "host_last_check", "host_last_hard_state_change", "host_last_hard_state", "host_last_state_change", "host_last_state", "host_last_time_down", "host_last_time_unreachable", "host_last_time_up", "host_latency", "host_long_plugin_output", "host_num_services_crit", "host_num_services_hard_crit", "host_num_services_hard_ok", "host_num_services_hard_unknown", "host_num_services_hard_warn", "host_num_services_ok", "host_num_services_pending", "host_num_services_unknown", "host_num_services_warn", "host_num_services", "host_parents", "host_pending_flex_downtime", "host_percent_state_change", "host_perf_data", "host_plugin_output", "host_scheduled_downtime_depth", "host_state_type", "host_state", "host_total_services", "host_worst_service_hard_state", "host_worst_service_state", "is_flapping", "last_check", "last_hard_state_change", "last_hard_state", "last_state_change", "last_state", "last_time_critical", "last_time_ok", "last_time_unknown", "last_time_warning", "latency", "long_plugin_output", "percent_state_change", "perf_data", "plugin_output", "scheduled_downtime_depth", "state_type", "state"]

  # (Optional) An array of filters to apply to the query.
  # By default a query must pass all filters, but 'And: x' or 'Or: x' commands can be used,
  # where x specifies the number of previous filter lines to apply the operator to.
  # Ex. ["state = 1", "state = 3", "Or: 2" ] matches anything with a state of 1 OR 3.
  #filter: ["checks_enabled = 1", "host_state = 0"]

  # Whether or not to split up the perfdata into individual metrics. This will create additional fields such as
  # [cpu][value], [cpu][min], [cpu][max], etc. for each parameter in the performance data. Default is true.
  #metrics: true

  # If enabled, only perfdata for the specified services will be reported. Default is to include metrics for all services.
  #metrics_allow: ["CPU Utilization", "Disk IO", "Memory", "Interface"]

  # If enabled, perfdata for the specified services will not be reported. Default is to include metrics for all services.
  #metrics_block: ["Uptime", "System Time", "Log"]

  # Whether to report just the 'value' field of the perfdata metrics, or whether to include the min / max / warn / crit
  # fields as well. Default is tr
